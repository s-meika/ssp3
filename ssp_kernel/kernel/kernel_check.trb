# -*- coding: utf-8 -*-
# 
#   TOPPERS/SSP Kernel
#       Toyohashi Open Platform for Embedded Real-Time Systems/
#       Advanced Standard Profile Kernel
# 
#   Copyright (C) 2015 by FUJI SOFT INCORPORATED, JAPAN
#   Copyright (C) 2015,2016 by Embedded and Real-Time Systems Laboratory
#               Graduate School of Information Science, Nagoya Univ., JAPAN
#   Copyright (C) 2017 by Naoki Saito
#              Nagoya Municipal Industrial Research Institute, JAPAN
#  
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
#  
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
# 
#   $Id: kernel_check.trb 662 2016-02-27 02:33:51Z ertl-hiro $
#  

#
#		コンフィギュレータのパス3の生成スクリプト
#

# 
#  タイムスタンプファイルの指定
# 
$timeStampFileName = "check.timestamp"

# 
#  タスクに関するチェック
# 
tinib_task = SYMBOL("_kernel_tinib_task")
$cfgData[:CRE_TSK].sort.each do |key, params|
  task = PEEK(tinib_task, $sizeof_TASK)

  # タスクの先頭番地のチェック
  if (task & ($CHECK_FUNC_ALIGN - 1)) != 0
    error_wrong_id("E_PAR", params, :task, :tskid, "not aligned")
  end
  if $CHECK_FUNC_NONNULL && task == 0
    error_wrong_id("E_PAR", params, :task, :tskid, "null")
  end

  tinib_task += $sizeof_TASK
end

# 
#  周期通知に関するチェック
# 
cycinib_cychdr = SYMBOL("_kernel_cycinib_cychdr")
$cfgData[:CRE_CYC].sort.each do |key, params|
  cychdr = PEEK(cycinib_cychdr, $sizeof_CYCHDR)

  # 周期ハンドラ先頭番地のチェック
  if (cychdr & ($CHECK_FUNC_ALIGN - 1)) != 0
    error_wrong_id("E_PAR", params, :cychdr, :cycid, "not aligned")
  end
  if $CHECK_FUNC_NONNULL && cychdr == 0
    error_wrong_id("E_PAR", params, :cychdr , :cycid, "null")
  end

  cycinib_cychdr += $sizeof_CYCHDR
end

# 
#  アラーム通知に関するチェック
# 
alminib_almhdr = SYMBOL("_kernel_alminib_almhdr")
$cfgData[:CRE_ALM].sort.each do |key, params|
  almhdr = PEEK(alminib_almhdr, $sizeof_ALMHDR)

  # アラームハンドラ先頭番地のチェック
  if (almhdr & ($CHECK_FUNC_ALIGN - 1)) != 0
    error_wrong_id("E_PAR", params, :almhdr, :almid, "not aligned")
  end
  if $CHECK_FUNC_NONNULL && almhdr == 0
    error_wrong_id("E_PAR", params, :almhdr , :almid, "null")
  end

  alminib_almhdr += $sizeof_ALMHDR
end

# 
#  共有スタック領域に関するチェック
# 
stkAddr = SYMBOL("_kernel_stk")
if !stkAddr.nil?
  stk = PEEK(stkAddr, $sizeof_void_ptr)

  # 共有スタック領域の先頭番地のチェック
  if (stk & ($CHECK_STACK_ALIGN - 1)) != 0
    error_wrong("E_PAR", $cfgData[:DEF_STK][1], :stk, "not aligned")
  end
  if $CHECK_STACK_NONNULL && stk == 0
    error_wrong("E_PAR", $cfgData[:DEF_STK][1], :stk, "null")
  end
end
